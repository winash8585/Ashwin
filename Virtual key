package Phase1Project;



	import java.io.File;
	import java.io.FileNotFoundException;
	import java.io.IOException;
	import java.nio.file.DirectoryNotEmptyException;
	import java.nio.file.Files;
	import java.nio.file.Path;
	import java.nio.file.Paths;
	import java.nio.file.StandardOpenOption;
	import java.util.ArrayList;
	import java.util.Collections;
	import java.util.List;
	import java.util.Scanner;

	public class LockedME {
		static Scanner sc = new Scanner(System.in);

		public static boolean welcome() {

			System.out.println("$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n");
			System.out.println("$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n");
			System.out.println("\tWELCOME TO LOCKME.COM\n");
			System.out.println("$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n");
			System.out.println("\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n");
			System.out.println("*************DEVELOPER DETAILS******************** \n");
			System.out.println("*************ASHWIN PRABHU**************************\n");
			System.out.println("*************SOFTWARE TRAINEE************************\n");
			System.out.println("-----COMPANY:AUTONAS TECHNOLOGY PVT LTD-------\n");

			System.out.println(
					"-----For More Details----, Contact:+91-8660262887----------\n\n--------Linkedin ID:Ashwin Prabhu---------\n");
			System.out.println(
					("Usefull of this application is :\n\n#Sorting files in directory and its subdirectory \n#Adding file in directory\n#Deleteing a file in a directory\n#Searching a file in a directory\n"));
			System.out.println("\n\n\n Press yes For begin  ->->");
			String str = sc.next();
			while (true) {
				if (str.equalsIgnoreCase("yes")) {
					return true;
				} else {
					System.out.println("Invalid Entry!! Please press YES to continue");
					str = sc.next();
				}
			}
		}

		public static void choices() {
			while (true) {
				System.out.println("\n\n***Please Enter your preffered choice*****\n");
				System.out.println("Press 1: List current file names in ascending order");
				System.out.println("Press 2: List user interfaces ");
				System.out.println("Press 3: Close  the Application\n");
				int n = sc.nextInt();
				switch (n) {
				case 1:
					List<String> list = new ArrayList<>();
					list = listFiles();

					System.out.println("\n***** Files in Rootfolder and its subfolder*******\n");
					for (int i = 0; i < list.size(); i++) {
						System.out.println(list.get(i));
					}
					break;
				case 2:
					userInterfaces();
					break;

				case 3:
					System.out.println("***Application Closed****");
					System.exit(0);
					break;

				default:
					System.out.println("Wrong choice!Please select the correct choice!");
				}
			}
		}

		public static ArrayList<String> listFiles() {

			System.out.println("Enter Root Directory path\n ");
			String location = sc.next();
			File file = null;
			try {
				file = new File(location);
			} catch (NullPointerException e) {
				System.out.println("Please enter correct Root directory");
				e.printStackTrace();
			}
			File[] fs = file.listFiles();
			ArrayList<String> list = new ArrayList<>();
			list = read(fs, list);
			Collections.sort(list);
			return list;

		}

		public static ArrayList<String> read(File file[], ArrayList<String> list) {
			for (File eachfile : file) {
				list.add(eachfile.getName());
				if (eachfile.isDirectory()) {
					File fs[] = eachfile.listFiles();
					read(fs, list);
				}
			}
			return list;
		}

		public static void userInterfaces() {
			System.out.println("\n\n***Please Enter your choice*****\n");
			System.out.println("Press 1: Add a file to the existing directory list");
			System.out.println("Press 2: Delete a user specified file from the existing directory list");
			System.out.println("Press 3: Search a user specified file from the main directory");
			System.out.println("Press 4: Navigate back to the main context\n");
			int n = sc.nextInt();
			switch (n) {
			case 1:
				addFile();
				break;
			case 2:
				deleteFile();
				break;
			case 3:
				searchFile();
				break;
			case 4:
				choices();
				break;
			default:
				System.out.println("Wrong choice entered!");
			}
		}

		public static void addFile() {
			System.out.println("Enter Existing Directory Path with new file name\n Example: F:\\temp\\autnas.txt \n");
			Path path = Paths.get(sc.next());
			List<String> list = new ArrayList<>();
			try {
				Files.write(path, list, StandardOpenOption.CREATE_NEW);
			} catch (IOException e) {
				System.out.println("\nFile Exists!");
				e.printStackTrace();
			}
			System.out.println("\nFile Created!");
		}

		public static void deleteFile() {
			System.out.println("Enter the file to be deleted with absolute path\n");
			Path path = Paths.get(sc.next());
			try {
				Files.deleteIfExists(path);
				System.out.println("File Deleted!");
			} catch (DirectoryNotEmptyException e) {
				e.printStackTrace();
			} catch (FileNotFoundException e) {
				System.out.println(e.getMessage());
			} catch (IOException e) {
				e.printStackTrace();
			}
		}

		public static void searchFile() {
			System.out.println("\nEnter the file to searched with extension");
			{
				String string = sc.next();
				ArrayList<String> list = new ArrayList<>();
				list = listFiles();
				if (list.contains(string)) {
					System.out.println("\nFile Exist!");
				} else
					System.out.println("\nFile do not exist!");
			}
		}

		public static void main(String[] args) {
			boolean check = welcome();
			if (check) {
				choices();
			}
		}

	}

